---
- name: If ansible_user not set, get the user name of the user running the script
  set_fact:
    ansible_user: "{{ lookup('env','USER') }}"
  when: ansible_user is undefined

# tasks file for docker_debian
- name: Uninstall old versions of Docker
  apt:
    name:
      - docker-compose
      - docker-doc
      - docker.io
      - podman-docker
      - containerd
      - runc
    state: absent

- name: Install prerequisites
  apt:
    update_cache: yes
    name:
      - ca-certificates
      - curl
      - gnupg

- name: Add Docker repository key
  apt_key:
    url: https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }}/gpg
    state: present

  register: add_repository_key
  ignore_errors: true

- name: Add docker repository
  apt_repository:
    repo: deb [arch={{ [ansible_architecture] | map('extract', deb_architecture) | first }}] https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable
    state: present

- name: Install packages
  apt:
    update_cache: yes
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin 
      - docker-compose-plugin
        
- name: adding user "{{ ansible_user }}" to group docker
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes
  become: yes
  when: ansible_user is defined

- name: Not adding ansible user to docker group
  cmd: echo "Use command: sudo usermod -aG docker $USER followed by logout and login" 
  when: ansible_user is undefined
